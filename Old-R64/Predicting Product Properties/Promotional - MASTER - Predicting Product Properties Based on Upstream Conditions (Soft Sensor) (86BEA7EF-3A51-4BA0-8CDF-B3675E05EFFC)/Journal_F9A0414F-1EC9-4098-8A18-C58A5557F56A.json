{
    "Definition": {
        "Archived": false,
        "Cache Enabled": false,
        "Created At": "1552580414408000000",
        "Description": "Pulling in Process Data Calculating new Delayed Reactor Signals Cleansing Model Input Signals Model Generation and Comparison Creating Boundaries: This worksheet uses Seeq tools to calculate and display product specification limits for the Product Viscosity as boundaries. Display Starting Point Boundary Input Signals: [An invalid workstep link was removed]Viscosity Quality",
        "Document": "<h4>Links to Previous Worksheets:</h4><ul><li><a href=\"https://demo.seeq.dev/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/17065A04-0E4E-4A0F-AAC4-BC78F3269FEF\" rel=\"nofollow noopener noreferrer\">Pulling in Process Data</a></li><li><a href=\"https://demo.seeq.dev/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/E730749E-353A-4D99-9CEF-3E0AFB9D6981\" rel=\"nofollow noopener noreferrer\">Calculating new Delayed Reactor Signals</a></li><li><a href=\"https://demo.seeq.dev/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/BDE8A3B9-866D-4D5B-8740-D10350D4924A\" rel=\"nofollow noopener noreferrer\">Cleansing Model Input Signals</a></li><li><a href=\"https://demo.seeq.dev/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/271B44F1-6AFB-4E54-9700-25E1577FCDDA\" rel=\"nofollow noopener noreferrer\">Model Generation and Comparison</a></li></ul><h3><strong>Creating Boundaries:</strong></h3><p>This worksheet uses Seeq tools to calculate and display product specification limits for the Product Viscosity as boundaries.</p><h4><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;F9A0414F-1EC9-4098-8A18-C58A5557F56A&amp;workstep&#61;63B67703-BF2E-405B-A8F2-E2B5393E10F9\" rel=\"nofollow noopener noreferrer\">Display Starting Point</a></h4><p><strong>Boundary Input Signals:</strong></p><ul><li>[An invalid workstep link was removed]Viscosity Quality Specification Limits<ul><li>Upper Limit</li><li>Lower Limit</li></ul></li><li>[An invalid workstep link was removed]Grade Transition Condition Boundaries</li></ul><p><strong>Creating Quality Specification Limits</strong></p><p>A tag does not exist for the upper and lower specification limit signals, so a signal had to be created.</p><ol><li>[An invalid workstep link was removed]Create a Condition for each Product Grade</li><li>Use Formula and the Splice function to create a new signal for the upper and lower specification limits for Product Viscosity across all grades. Below is an example of how Formula is used to create these signals.\u00a0</li></ol><pre>$USL101 &#61; (1.1).tosignal() $USL102 &#61; (0.88).tosignal() $USL103 &#61; (1.21).tosignal() $USL104 &#61; (0.825).tosignal() $USL105 &#61; (0.99).tosignal() $USL106 &#61; (0.594).tosignal() $USL107 &#61; (1.155).tosignal() $USL108 &#61; (1.87).tosignal() \n0.tosignal() \u00a0 \u00a0 \u00a0.splice($USL101,$GR101,False) \u00a0 \u00a0 \u00a0.splice($USL102,$GR102,False) \u00a0 \u00a0 \u00a0.splice($USL103,$GR103, False) \u00a0 \u00a0 \u00a0.splice($USL104,$GR104, False) \u00a0 \u00a0 \u00a0.splice($USL105,$GR105, False) \u00a0 \u00a0 \u00a0.splice($USL106,$GR106, False) \u00a0 \u00a0 \u00a0.splice($USL107,$GR107, False) \u00a0 \u00a0 \u00a0.splice($USL108,$GR108, False)</pre><ol><li>[An invalid workstep link was removed]Upper Specification Limit\u00a0</li><li>[An invalid workstep link was removed]Lower Specification Limit</li><li>Use the Boundaries tool to turn the USL and LSL into [An invalid workstep link was removed]boundaries on the signal &#34;Product_Viscosity&#34;.</li><li>[An invalid workstep link was removed]Create a signal for the Target Viscosity (Central between the USL and LSL). This can be done via the same splice methodology in formula, or by taking the average of the USL and LSL signals.</li></ol><pre>$LSL.add($USL).divide(2)</pre><p><strong>Creating Boundaries during Grade Transitions</strong></p><p>We want to expand our upper and lower boundaries on the viscosity signal horizontally to encapsulate time periods when we are transitioning between product grades</p><p>1. To [An invalid workstep link was removed]create a condition for &#34;Grade Transition&#34;\u00a0use the following formula code to:</p><ol><li>Shrink the capsules for each grade by a tiny amount, to allow for a new capsule to be formed between them</li><li>Join the shrunken capsules into one composite condition for all grades</li><li>Invert this period of all grades to identify only the time periods between grades</li><li>Grow this new &#34;between grades&#34; condition</li><li>Shift that grown condition to begin at the transition, rather than center around it.\u00a0</li></ol><pre>//Shrunken Capsules $shrunkGR101 &#61; $GR101.shrink(1min) $shrunkGR102 &#61; $GR102.shrink(1min) $shrunkGR103 &#61; $GR103.shrink(1min) $shrunkGR104 &#61; $GR104.shrink(1min) $shrunkGR105 &#61; $GR105.shrink(1min) $shrunkGR106 &#61; $GR106.shrink(1min) $shrunkGR107 &#61; $GR107.shrink(1min) $shrunkGR108 &#61; $GR108.shrink(1min) \n$shrunkGR101 \u00a0 \u00a0 \u00a0.union($shrunkGR102,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR103,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR104,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR105,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR106,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR107,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR108,5d) \u00a0 \u00a0 \u00a0.inverse(1h) \u00a0 \u00a0 \u00a0.grow(1h) \u00a0 \u00a0 \u00a0.move(1h,1h)</pre><p>2. [An invalid workstep link was removed]Calculate the maximum and minimum limits to be applied to create boundaries during the &#34;grade transition&#34; capsules. The following code takes the minimum of the LSL signal during the condition &#34;Transition&#34; and creates a new signal with that value over the duration of the condition.\u00a0</p><pre>$LSL.aggregate(minvalue(),$Transition,durationkey())</pre><p>3. Use the Boundaries tool to [An invalid workstep link was removed]create a new boundary on the Product_Viscosity signal over the condition &#34;Grade Transition Capsules.&#34;</p>",
        "DocumentBackup\u02c9NK8NCaiD_pmiUrnx6sQEeIopVmoZxLY5ClM4-ggIPl4\u02c92019-03-14T16:34:00Z": "<h4>Links to Previous Worksheets:</h4><ul><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/17065A04-0E4E-4A0F-AAC4-BC78F3269FEF\" rel=\"nofollow noopener noreferrer\">Pulling in Process Data</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/E730749E-353A-4D99-9CEF-3E0AFB9D6981\" rel=\"nofollow noopener noreferrer\">Calculating new Delayed Reactor Signals</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/BDE8A3B9-866D-4D5B-8740-D10350D4924A\" rel=\"nofollow noopener noreferrer\">Cleansing Model Input Signals</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/271B44F1-6AFB-4E54-9700-25E1577FCDDA\" rel=\"nofollow noopener noreferrer\">Model Generation and Comparison</a></li></ul><h3><strong>Creating Boundaries:</strong></h3><p>This worksheet uses Seeq tools to calculate and display product specification limits for the Product Viscosity as boundaries.</p><h4><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;F9A0414F-1EC9-4098-8A18-C58A5557F56A&amp;workstep&#61;63B67703-BF2E-405B-A8F2-E2B5393E10F9\" rel=\"nofollow noopener noreferrer\">Display Starting Point</a></h4><p><strong>Boundary Input Signals:</strong></p><ul><li>[An invalid workstep link was removed]Viscosity Quality Specification Limits<ul><li>Upper Limit</li><li>Lower Limit</li></ul></li><li>[An invalid workstep link was removed]Grade Transition Condition Boundaries</li></ul><p><strong>Creating Quality Specification Limits</strong></p><p>A tag does not exist for the upper and lower specification limit signals, so a signal had to be created.</p><ol><li>[An invalid workstep link was removed]Create a Condition for each Product Grade</li><li>Use Formula and the Splice function to create a new signal for the upper and lower specification limits for Product Viscosity across all grades. Below is an example of how Formula is used to create these signals.\u00a0</li><li><pre>$USL101 &#61; (1.1).tosignal() $USL102 &#61; (0.88).tosignal() $USL103 &#61; (1.21).tosignal() $USL104 &#61; (0.825).tosignal() $USL105 &#61; (0.99).tosignal() $USL106 &#61; (0.594).tosignal() $USL107 &#61; (1.155).tosignal() $USL108 &#61; (1.87).tosignal() \n0.tosignal() \u00a0 \u00a0 \u00a0.splice($USL101,$GR101,False) \u00a0 \u00a0 \u00a0.splice($USL102,$GR102,False) \u00a0 \u00a0 \u00a0.splice($USL103,$GR103, False) \u00a0 \u00a0 \u00a0.splice($USL104,$GR104, False) \u00a0 \u00a0 \u00a0.splice($USL105,$GR105, False) \u00a0 \u00a0 \u00a0.splice($USL106,$GR106, False) \u00a0 \u00a0 \u00a0.splice($USL107,$GR107, False) \u00a0 \u00a0 \u00a0.splice($USL108,$GR108, False)</pre><ol><li>[An invalid workstep link was removed]Upper Specification Limit\u00a0</li><li>[An invalid workstep link was removed]Lower Specification Limit</li></ol></li><li>Use the Boundaries tool to turn the USL and LSL into [An invalid workstep link was removed]boundaries on the signal &#34;Product_Viscosity&#34;.</li><li>[An invalid workstep link was removed]Create a signal for the Target Viscosity (Central between the USL and LSL). This can be done via the same splice methodology in formula, or by taking the average of the USL and LSL signals.<ol><li><pre>$LSL.add($USL).divide(2)</pre></li></ol></li></ol><p><strong>Creating Boundaries during Grade Transitions</strong></p><p>We want to expand our upper and lower boundaries on the viscosity signal horizontally to encapsulate time periods when we are transitioning between product grades</p><p>1. To [An invalid workstep link was removed]create a condition for &#34;Grade Transition&#34;\u00a0use the following formula code to:</p><ol><li>Shrink the capsules for each grade by a tiny amount, to allow for a new capsule to be formed between them</li><li>Join the shrunken capsules into one composite condition for all grades</li><li>Invert this period of all grades to identify only the time periods between grades</li><li>Grow this new &#34;between grades&#34; condition</li><li>Shift that grown condition to begin at the transition, rather than center around it.\u00a0</li></ol><pre>//Shrunken Capsules $shrunkGR101 &#61; $GR101.shrink(1min) $shrunkGR102 &#61; $GR102.shrink(1min) $shrunkGR103 &#61; $GR103.shrink(1min) $shrunkGR104 &#61; $GR104.shrink(1min) $shrunkGR105 &#61; $GR105.shrink(1min) $shrunkGR106 &#61; $GR106.shrink(1min) $shrunkGR107 &#61; $GR107.shrink(1min) $shrunkGR108 &#61; $GR108.shrink(1min) \n$shrunkGR101 \u00a0 \u00a0 \u00a0.union($shrunkGR102,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR103,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR104,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR105,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR106,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR107,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR108,5d) \u00a0 \u00a0 \u00a0.inverse(1h) \u00a0 \u00a0 \u00a0.grow(1h) \u00a0 \u00a0 \u00a0.move(1h,1h)</pre><p>2. [An invalid workstep link was removed]Calculate the maximum and minimum limits to be applied to create boundaries during the &#34;grade transition&#34; capsules. The following code takes the minimum of the LSL signal during the condition &#34;Transition&#34; and creates a new signal with that value over the duration of the condition.\u00a0</p><pre>$LSL.aggregate(minvalue(),$Transition,durationkey())</pre><p>3. Use the Boundaries tool to [An invalid workstep link was removed]create a new boundary on the Product_Viscosity signal over the condition &#34;Grade Transition Capsules.&#34;</p>",
        "DocumentBackup\u02c9_rafwO37QaLXxwR3ow9Wv5r7UQSmrRF3MKnqTfNGipY\u02c92022-01-12T13:19:00Z": "<h4>Links to Previous Worksheets:</h4><ul><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/17065A04-0E4E-4A0F-AAC4-BC78F3269FEF\" rel=\"nofollow noopener noreferrer\">Pulling in Process Data</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/E730749E-353A-4D99-9CEF-3E0AFB9D6981\" rel=\"nofollow noopener noreferrer\">Calculating new Delayed Reactor Signals</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/BDE8A3B9-866D-4D5B-8740-D10350D4924A\" rel=\"nofollow noopener noreferrer\">Cleansing Model Input Signals</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/271B44F1-6AFB-4E54-9700-25E1577FCDDA\" rel=\"nofollow noopener noreferrer\">Model Generation and Comparison</a></li></ul><h3><strong>Creating Boundaries:</strong></h3><p>This worksheet uses Seeq tools to calculate and display product specification limits for the Product Viscosity as boundaries.</p><h4><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;F9A0414F-1EC9-4098-8A18-C58A5557F56A&amp;workstep&#61;63B67703-BF2E-405B-A8F2-E2B5393E10F9\" rel=\"nofollow noopener noreferrer\">Display Starting Point</a></h4><p><strong>Boundary Input Signals:</strong></p><ul><li>[An invalid workstep link was removed]Viscosity Quality Specification Limits<ul><li>Upper Limit</li><li>Lower Limit</li></ul></li><li>[An invalid workstep link was removed]Grade Transition Condition Boundaries</li></ul><p><strong>Creating Quality Specification Limits</strong></p><p>A tag does not exist for the upper and lower specification limit signals, so a signal had to be created.</p><ol><li>[An invalid workstep link was removed]Create a Condition for each Product Grade</li><li>Use Formula and the Splice function to create a new signal for the upper and lower specification limits for Product Viscosity across all grades. Below is an example of how Formula is used to create these signals.\u00a0</li><li><pre><code>$USL101 &#61; (1.1).tosignal() $USL102 &#61; (0.88).tosignal() $USL103 &#61; (1.21).tosignal() $USL104 &#61; (0.825).tosignal() $USL105 &#61; (0.99).tosignal() $USL106 &#61; (0.594).tosignal() $USL107 &#61; (1.155).tosignal() $USL108 &#61; (1.87).tosignal() \n0.tosignal() \u00a0 \u00a0 \u00a0.splice($USL101,$GR101,False) \u00a0 \u00a0 \u00a0.splice($USL102,$GR102,False) \u00a0 \u00a0 \u00a0.splice($USL103,$GR103, False) \u00a0 \u00a0 \u00a0.splice($USL104,$GR104, False) \u00a0 \u00a0 \u00a0.splice($USL105,$GR105, False) \u00a0 \u00a0 \u00a0.splice($USL106,$GR106, False) \u00a0 \u00a0 \u00a0.splice($USL107,$GR107, False) \u00a0 \u00a0 \u00a0.splice($USL108,$GR108, False)</code></pre><ol><li>[An invalid workstep link was removed]Upper Specification Limit\u00a0</li><li>[An invalid workstep link was removed]Lower Specification Limit</li></ol></li><li>Use the Boundaries tool to turn the USL and LSL into [An invalid workstep link was removed]boundaries on the signal &#34;Product_Viscosity&#34;.</li><li>[An invalid workstep link was removed]Create a signal for the Target Viscosity (Central between the USL and LSL). This can be done via the same splice methodology in formula, or by taking the average of the USL and LSL signals.<ol><li><pre><code>$LSL.add($USL).divide(2)</code></pre></li></ol></li></ol><p><strong>Creating Boundaries during Grade Transitions</strong></p><p>We want to expand our upper and lower boundaries on the viscosity signal horizontally to encapsulate time periods when we are transitioning between product grades</p><p>1. To [An invalid workstep link was removed]create a condition for &#34;Grade Transition&#34;\u00a0use the following formula code to:</p><ol><li>Shrink the capsules for each grade by a tiny amount, to allow for a new capsule to be formed between them</li><li>Join the shrunken capsules into one composite condition for all grades</li><li>Invert this period of all grades to identify only the time periods between grades</li><li>Grow this new &#34;between grades&#34; condition</li><li>Shift that grown condition to begin at the transition, rather than center around it.\u00a0</li></ol><pre><code>//Shrunken Capsules $shrunkGR101 &#61; $GR101.shrink(1min) $shrunkGR102 &#61; $GR102.shrink(1min) $shrunkGR103 &#61; $GR103.shrink(1min) $shrunkGR104 &#61; $GR104.shrink(1min) $shrunkGR105 &#61; $GR105.shrink(1min) $shrunkGR106 &#61; $GR106.shrink(1min) $shrunkGR107 &#61; $GR107.shrink(1min) $shrunkGR108 &#61; $GR108.shrink(1min) \n$shrunkGR101 \u00a0 \u00a0 \u00a0.union($shrunkGR102,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR103,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR104,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR105,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR106,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR107,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR108,5d) \u00a0 \u00a0 \u00a0.inverse(1h) \u00a0 \u00a0 \u00a0.grow(1h) \u00a0 \u00a0 \u00a0.move(1h,1h)</code></pre><p>2. [An invalid workstep link was removed]Calculate the maximum and minimum limits to be applied to create boundaries during the &#34;grade transition&#34; capsules. The following code takes the minimum of the LSL signal during the condition &#34;Transition&#34; and creates a new signal with that value over the duration of the condition.\u00a0</p><pre><code>$LSL.aggregate(minvalue(),$Transition,durationkey())</code></pre><p>3. Use the Boundaries tool to [An invalid workstep link was removed]create a new boundary on the Product_Viscosity signal over the condition &#34;Grade Transition Capsules.&#34;</p>",
        "DocumentBackup\u02c9_rafwO37QaLXxwR3ow9Wv5r7UQSmrRF3MKnqTfNGipY\u02c92023-08-18T12:03:00Z": "<h4>Links to Previous Worksheets:</h4><ul><li><a href=\"https://demo.seeq.dev/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/17065A04-0E4E-4A0F-AAC4-BC78F3269FEF\" rel=\"nofollow noopener noreferrer\">Pulling in Process Data</a></li><li><a target=\"_blank\" href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/E730749E-353A-4D99-9CEF-3E0AFB9D6981\" rel=\"nofollow noopener noreferrer\">Calculating new Delayed Reactor Signals</a></li><li><a target=\"_blank\" href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/BDE8A3B9-866D-4D5B-8740-D10350D4924A\" rel=\"nofollow noopener noreferrer\">Cleansing Model Input Signals</a></li><li><a target=\"_blank\" href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/271B44F1-6AFB-4E54-9700-25E1577FCDDA\" rel=\"nofollow noopener noreferrer\">Model Generation and Comparison</a></li></ul><h3><strong>Creating Boundaries:</strong></h3><p>This worksheet uses Seeq tools to calculate and display product specification limits for the Product Viscosity as boundaries.</p><h4><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;F9A0414F-1EC9-4098-8A18-C58A5557F56A&amp;workstep&#61;63B67703-BF2E-405B-A8F2-E2B5393E10F9\" rel=\"nofollow noopener noreferrer\">Display Starting Point</a></h4><p><strong>Boundary Input Signals:</strong></p><ul><li>[An invalid workstep link was removed]Viscosity Quality Specification Limits<ul><li>Upper Limit</li><li>Lower Limit</li></ul></li><li>[An invalid workstep link was removed]Grade Transition Condition Boundaries</li></ul><p><strong>Creating Quality Specification Limits</strong></p><p>A tag does not exist for the upper and lower specification limit signals, so a signal had to be created.</p><ol><li>[An invalid workstep link was removed]Create a Condition for each Product Grade</li><li>Use Formula and the Splice function to create a new signal for the upper and lower specification limits for Product Viscosity across all grades. Below is an example of how Formula is used to create these signals.\u00a0</li></ol><pre>$USL101 &#61; (1.1).tosignal() $USL102 &#61; (0.88).tosignal() $USL103 &#61; (1.21).tosignal() $USL104 &#61; (0.825).tosignal() $USL105 &#61; (0.99).tosignal() $USL106 &#61; (0.594).tosignal() $USL107 &#61; (1.155).tosignal() $USL108 &#61; (1.87).tosignal() \n0.tosignal() \u00a0 \u00a0 \u00a0.splice($USL101,$GR101,False) \u00a0 \u00a0 \u00a0.splice($USL102,$GR102,False) \u00a0 \u00a0 \u00a0.splice($USL103,$GR103, False) \u00a0 \u00a0 \u00a0.splice($USL104,$GR104, False) \u00a0 \u00a0 \u00a0.splice($USL105,$GR105, False) \u00a0 \u00a0 \u00a0.splice($USL106,$GR106, False) \u00a0 \u00a0 \u00a0.splice($USL107,$GR107, False) \u00a0 \u00a0 \u00a0.splice($USL108,$GR108, False)</pre><ol><li>[An invalid workstep link was removed]Upper Specification Limit\u00a0</li><li>[An invalid workstep link was removed]Lower Specification Limit</li><li>Use the Boundaries tool to turn the USL and LSL into [An invalid workstep link was removed]boundaries on the signal &#34;Product_Viscosity&#34;.</li><li>[An invalid workstep link was removed]Create a signal for the Target Viscosity (Central between the USL and LSL). This can be done via the same splice methodology in formula, or by taking the average of the USL and LSL signals.</li></ol><pre>$LSL.add($USL).divide(2)</pre><p><strong>Creating Boundaries during Grade Transitions</strong></p><p>We want to expand our upper and lower boundaries on the viscosity signal horizontally to encapsulate time periods when we are transitioning between product grades</p><p>1. To [An invalid workstep link was removed]create a condition for &#34;Grade Transition&#34;\u00a0use the following formula code to:</p><ol><li>Shrink the capsules for each grade by a tiny amount, to allow for a new capsule to be formed between them</li><li>Join the shrunken capsules into one composite condition for all grades</li><li>Invert this period of all grades to identify only the time periods between grades</li><li>Grow this new &#34;between grades&#34; condition</li><li>Shift that grown condition to begin at the transition, rather than center around it.\u00a0</li></ol><pre>//Shrunken Capsules $shrunkGR101 &#61; $GR101.shrink(1min) $shrunkGR102 &#61; $GR102.shrink(1min) $shrunkGR103 &#61; $GR103.shrink(1min) $shrunkGR104 &#61; $GR104.shrink(1min) $shrunkGR105 &#61; $GR105.shrink(1min) $shrunkGR106 &#61; $GR106.shrink(1min) $shrunkGR107 &#61; $GR107.shrink(1min) $shrunkGR108 &#61; $GR108.shrink(1min) \n$shrunkGR101 \u00a0 \u00a0 \u00a0.union($shrunkGR102,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR103,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR104,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR105,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR106,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR107,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR108,5d) \u00a0 \u00a0 \u00a0.inverse(1h) \u00a0 \u00a0 \u00a0.grow(1h) \u00a0 \u00a0 \u00a0.move(1h,1h)</pre><p>2. [An invalid workstep link was removed]Calculate the maximum and minimum limits to be applied to create boundaries during the &#34;grade transition&#34; capsules. The following code takes the minimum of the LSL signal during the condition &#34;Transition&#34; and creates a new signal with that value over the duration of the condition.\u00a0</p><pre>$LSL.aggregate(minvalue(),$Transition,durationkey())</pre><p>3. Use the Boundaries tool to [An invalid workstep link was removed]create a new boundary on the Product_Viscosity signal over the condition &#34;Grade Transition Capsules.&#34;</p>",
        "DocumentBackup\u02c9_rafwO37QaLXxwR3ow9Wv5r7UQSmrRF3MKnqTfNGipY\u02c92023-08-18T12:04:00Z": "<h4>Links to Previous Worksheets:</h4><ul><li><a href=\"https://demo.seeq.dev/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/17065A04-0E4E-4A0F-AAC4-BC78F3269FEF\" rel=\"nofollow noopener noreferrer\">Pulling in Process Data</a></li><li><a href=\"https://demo.seeq.dev/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/E730749E-353A-4D99-9CEF-3E0AFB9D6981\" rel=\"nofollow noopener noreferrer\">Calculating new Delayed Reactor Signals</a></li><li><a href=\"https://demo.seeq.dev/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/BDE8A3B9-866D-4D5B-8740-D10350D4924A\" rel=\"nofollow noopener noreferrer\">Cleansing Model Input Signals</a></li><li><a target=\"_blank\" href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/271B44F1-6AFB-4E54-9700-25E1577FCDDA\" rel=\"nofollow noopener noreferrer\">Model Generation and Comparison</a></li></ul><h3><strong>Creating Boundaries:</strong></h3><p>This worksheet uses Seeq tools to calculate and display product specification limits for the Product Viscosity as boundaries.</p><h4><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;F9A0414F-1EC9-4098-8A18-C58A5557F56A&amp;workstep&#61;63B67703-BF2E-405B-A8F2-E2B5393E10F9\" rel=\"nofollow noopener noreferrer\">Display Starting Point</a></h4><p><strong>Boundary Input Signals:</strong></p><ul><li>[An invalid workstep link was removed]Viscosity Quality Specification Limits<ul><li>Upper Limit</li><li>Lower Limit</li></ul></li><li>[An invalid workstep link was removed]Grade Transition Condition Boundaries</li></ul><p><strong>Creating Quality Specification Limits</strong></p><p>A tag does not exist for the upper and lower specification limit signals, so a signal had to be created.</p><ol><li>[An invalid workstep link was removed]Create a Condition for each Product Grade</li><li>Use Formula and the Splice function to create a new signal for the upper and lower specification limits for Product Viscosity across all grades. Below is an example of how Formula is used to create these signals.\u00a0</li></ol><pre>$USL101 &#61; (1.1).tosignal() $USL102 &#61; (0.88).tosignal() $USL103 &#61; (1.21).tosignal() $USL104 &#61; (0.825).tosignal() $USL105 &#61; (0.99).tosignal() $USL106 &#61; (0.594).tosignal() $USL107 &#61; (1.155).tosignal() $USL108 &#61; (1.87).tosignal() \n0.tosignal() \u00a0 \u00a0 \u00a0.splice($USL101,$GR101,False) \u00a0 \u00a0 \u00a0.splice($USL102,$GR102,False) \u00a0 \u00a0 \u00a0.splice($USL103,$GR103, False) \u00a0 \u00a0 \u00a0.splice($USL104,$GR104, False) \u00a0 \u00a0 \u00a0.splice($USL105,$GR105, False) \u00a0 \u00a0 \u00a0.splice($USL106,$GR106, False) \u00a0 \u00a0 \u00a0.splice($USL107,$GR107, False) \u00a0 \u00a0 \u00a0.splice($USL108,$GR108, False)</pre><ol><li>[An invalid workstep link was removed]Upper Specification Limit\u00a0</li><li>[An invalid workstep link was removed]Lower Specification Limit</li><li>Use the Boundaries tool to turn the USL and LSL into [An invalid workstep link was removed]boundaries on the signal &#34;Product_Viscosity&#34;.</li><li>[An invalid workstep link was removed]Create a signal for the Target Viscosity (Central between the USL and LSL). This can be done via the same splice methodology in formula, or by taking the average of the USL and LSL signals.</li></ol><pre>$LSL.add($USL).divide(2)</pre><p><strong>Creating Boundaries during Grade Transitions</strong></p><p>We want to expand our upper and lower boundaries on the viscosity signal horizontally to encapsulate time periods when we are transitioning between product grades</p><p>1. To [An invalid workstep link was removed]create a condition for &#34;Grade Transition&#34;\u00a0use the following formula code to:</p><ol><li>Shrink the capsules for each grade by a tiny amount, to allow for a new capsule to be formed between them</li><li>Join the shrunken capsules into one composite condition for all grades</li><li>Invert this period of all grades to identify only the time periods between grades</li><li>Grow this new &#34;between grades&#34; condition</li><li>Shift that grown condition to begin at the transition, rather than center around it.\u00a0</li></ol><pre>//Shrunken Capsules $shrunkGR101 &#61; $GR101.shrink(1min) $shrunkGR102 &#61; $GR102.shrink(1min) $shrunkGR103 &#61; $GR103.shrink(1min) $shrunkGR104 &#61; $GR104.shrink(1min) $shrunkGR105 &#61; $GR105.shrink(1min) $shrunkGR106 &#61; $GR106.shrink(1min) $shrunkGR107 &#61; $GR107.shrink(1min) $shrunkGR108 &#61; $GR108.shrink(1min) \n$shrunkGR101 \u00a0 \u00a0 \u00a0.union($shrunkGR102,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR103,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR104,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR105,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR106,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR107,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR108,5d) \u00a0 \u00a0 \u00a0.inverse(1h) \u00a0 \u00a0 \u00a0.grow(1h) \u00a0 \u00a0 \u00a0.move(1h,1h)</pre><p>2. [An invalid workstep link was removed]Calculate the maximum and minimum limits to be applied to create boundaries during the &#34;grade transition&#34; capsules. The following code takes the minimum of the LSL signal during the condition &#34;Transition&#34; and creates a new signal with that value over the duration of the condition.\u00a0</p><pre>$LSL.aggregate(minvalue(),$Transition,durationkey())</pre><p>3. Use the Boundaries tool to [An invalid workstep link was removed]create a new boundary on the Product_Viscosity signal over the condition &#34;Grade Transition Capsules.&#34;</p>",
        "DocumentBackup\u02c9allison.buenemann@seeq.com\u02c92019-03-14T16:20:00Z": "<h4>Links to Previous Worksheets:</h4><ul><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/17065A04-0E4E-4A0F-AAC4-BC78F3269FEF\" rel=\"nofollow noopener noreferrer\">Pulling in Process Data</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/E730749E-353A-4D99-9CEF-3E0AFB9D6981\" rel=\"nofollow noopener noreferrer\">Calculating new Delayed Reactor Signals</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/BDE8A3B9-866D-4D5B-8740-D10350D4924A\" rel=\"nofollow noopener noreferrer\">Cleansing Model Input Signals</a></li></ul><h3><strong>Compare Models:</strong></h3><p>This worksheet creates several models to predict the product viscosity from the cleansed and delayed reactor operation conditions.</p><h4><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;271B44F1-6AFB-4E54-9700-25E1577FCDDA&amp;workstep&#61;87DC915C-C5C5-46D7-A11D-BFE50C6B1F03\" rel=\"nofollow noopener noreferrer\">Display Starting Point</a></h4><p><strong>Model Input Signals:</strong></p><ul><li>Delayed Reactor Temperature - Cleansed</li><li>Delayed Reactor Conversion - Cleansed</li><li>Delayed Reactor Modifier Flow - Cleansed</li><li>Product Viscosity - Actual</li></ul><p><br></p><h4><strong>Display Predictions in Calendar View</strong></h4><ul><li><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;271B44F1-6AFB-4E54-9700-25E1577FCDDA&amp;workstep&#61;D7A99829-9BB6-4776-8999-59F85BD2EDA8\" rel=\"nofollow noopener noreferrer\">Linear Model</a></li><li><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;271B44F1-6AFB-4E54-9700-25E1577FCDDA&amp;workstep&#61;554BE9EF-EF74-4862-9E23-A69D01CF6240\" rel=\"nofollow noopener noreferrer\">Logarithmic Model</a></li><li><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;271B44F1-6AFB-4E54-9700-25E1577FCDDA&amp;workstep&#61;A253DFC8-5DCF-4B06-AB0A-77C57537CF3A\" rel=\"nofollow noopener noreferrer\">Polynomial Model</a></li></ul><h4><strong>Display Predictions in Scatter Plot View</strong></h4><ul><li><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;271B44F1-6AFB-4E54-9700-25E1577FCDDA&amp;workstep&#61;F78813FA-5F25-4BA7-A92E-98B97DED63FF\" rel=\"nofollow noopener noreferrer\">Linear Model</a></li><li><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;271B44F1-6AFB-4E54-9700-25E1577FCDDA&amp;workstep&#61;43B196A3-BD67-4AAD-B585-77801C695E31\" rel=\"nofollow noopener noreferrer\">Logarithmic Model</a></li><li><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;271B44F1-6AFB-4E54-9700-25E1577FCDDA&amp;workstep&#61;EB584ABB-186B-4073-A4FA-0CB4968020E3\" rel=\"nofollow noopener noreferrer\">Polynomial Model</a></li></ul><h4><a href=\"https://demo.seeq.com/links?type&#61;condition&amp;item&#61;2F20E545-370B-4FB6-8E74-B148A98569B0\" rel=\"nofollow noopener noreferrer\"></a></h4><h4><strong>Select a model to move forward with</strong>\u00a0</h4><ul><li>In this example, select <a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;271B44F1-6AFB-4E54-9700-25E1577FCDDA&amp;workstep&#61;F517729A-8A7E-48B5-B7BA-C058883857EF\" rel=\"nofollow noopener noreferrer\">Polynomial Model</a></li></ul>",
        "DocumentBackup\u02c9allison.buenemann@seeq.com\u02c92019-03-14T16:21:00Z": "<h4>Links to Previous Worksheets:</h4><ul><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/17065A04-0E4E-4A0F-AAC4-BC78F3269FEF\" rel=\"nofollow noopener noreferrer\">Pulling in Process Data</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/E730749E-353A-4D99-9CEF-3E0AFB9D6981\" rel=\"nofollow noopener noreferrer\">Calculating new Delayed Reactor Signals</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/BDE8A3B9-866D-4D5B-8740-D10350D4924A\" rel=\"nofollow noopener noreferrer\">Cleansing Model Input Signals</a></li><li><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;F9A0414F-1EC9-4098-8A18-C58A5557F56A&amp;workstep&#61;F517729A-8A7E-48B5-B7BA-C058883857EF\" rel=\"nofollow noopener noreferrer\">Model Generation and Comparison</a></li></ul><h3><strong>Creating Boundaries:</strong></h3><p>This worksheet uses Seeq tools to calculate and display product specification limits for the Product Viscosity as boundaries.</p><h4><a href=\"http://desktop-opreio6:34216/links?type&#61;workstep&amp;workbook&#61;54A63BFE-57FB-48CA-8AA7-12D4E04E2DF9&amp;worksheet&#61;B5B305FD-D4F6-4467-8F5C-480F88570FD5&amp;workstep&#61;E2C9EE91-8060-467A-AA98-86CD22A69DF0\" rel=\"nofollow noopener noreferrer\">Display Starting Point</a></h4><p><strong>Boundary Input Signals:</strong></p><ul><li>[An invalid workstep link was removed]Viscosity Quality Specification Limits<ul><li>Upper Limit</li><li>Lower Limit</li></ul></li><li>[An invalid workstep link was removed]Grade Transition Condition Boundaries</li></ul><p><strong>Creating Quality Specification Limits</strong></p><p>A tag does not exist for the upper and lower specification limit signals, so a signal had to be created.</p><ol><li>[An invalid workstep link was removed]Create a Condition for each Product Grade</li><li>Use Formula and the Splice function to create a new signal for the upper and lower specification limits for Product Viscosity across all grades. Below is an example of how Formula is used to create these signals.\u00a0</li><li><pre>$USL101 &#61; (1.1).tosignal() $USL102 &#61; (0.88).tosignal() $USL103 &#61; (1.21).tosignal() $USL104 &#61; (0.825).tosignal() $USL105 &#61; (0.99).tosignal() $USL106 &#61; (0.594).tosignal() $USL107 &#61; (1.155).tosignal() $USL108 &#61; (1.87).tosignal() \n0.tosignal() \u00a0 \u00a0 \u00a0.splice($USL101,$GR101,False) \u00a0 \u00a0 \u00a0.splice($USL102,$GR102,False) \u00a0 \u00a0 \u00a0.splice($USL103,$GR103, False) \u00a0 \u00a0 \u00a0.splice($USL104,$GR104, False) \u00a0 \u00a0 \u00a0.splice($USL105,$GR105, False) \u00a0 \u00a0 \u00a0.splice($USL106,$GR106, False) \u00a0 \u00a0 \u00a0.splice($USL107,$GR107, False) \u00a0 \u00a0 \u00a0.splice($USL108,$GR108, False)</pre><ol><li>[An invalid workstep link was removed]Upper Specification Limit\u00a0</li><li>[An invalid workstep link was removed]Lower Specification Limit</li></ol></li><li>Use the Boundaries tool to turn the USL and LSL into\u00a0[An invalid workstep link was removed]boundaries on the signal &#34;Product_Viscosity&#34;.</li><li>[An invalid workstep link was removed]Create a signal for the Target Viscosity (Central between the USL and LSL). This can be done via the same splice methodology in formula, or by taking the average of the USL and LSL signals.<ol><li><pre>$LSL.add($USL).divide(2)</pre></li></ol></li></ol><p><strong>Creating Boundaries during Grade Transitions</strong></p><p>We want to expand our upper and lower boundaries on the viscosity signal horizontally to encapsulate time periods when we are transitioning between product grades</p><p>1. To\u00a0[An invalid workstep link was removed]create a condition for &#34;Grade Transition&#34;\u00a0use the following formula code to:</p><ol><li>Shrink the capsules for each grade by a tiny amount, to allow for a new capsule to be formed between them</li><li>Join the shrunken capsules into one composite condition for all grades</li><li>Invert this period of all grades to identify only the time periods between grades</li><li>Grow this new &#34;between grades&#34; condition</li><li>Shift that grown condition to begin at the transition, rather than center around it.\u00a0</li></ol><pre>//Shrunken Capsules $shrunkGR101 &#61; $GR101.shrink(1min) $shrunkGR102 &#61; $GR102.shrink(1min) $shrunkGR103 &#61; $GR103.shrink(1min) $shrunkGR104 &#61; $GR104.shrink(1min) $shrunkGR105 &#61; $GR105.shrink(1min) $shrunkGR106 &#61; $GR106.shrink(1min) $shrunkGR107 &#61; $GR107.shrink(1min) $shrunkGR108 &#61; $GR108.shrink(1min) \n$shrunkGR101 \u00a0 \u00a0 \u00a0.union($shrunkGR102,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR103,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR104,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR105,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR106,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR107,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR108,5d) \u00a0 \u00a0 \u00a0.inverse(1h) \u00a0 \u00a0 \u00a0.grow(1h) \u00a0 \u00a0 \u00a0.move(1h,1h)</pre><p>2.\u00a0[An invalid workstep link was removed]Calculate the maximum and minimum limits to be applied to create boundaries during the &#34;grade transition&#34; capsules. The following code takes the minimum of the LSL signal during the condition &#34;Transition&#34; and creates a new signal with that value over the duration of the condition.\u00a0</p><pre>$LSL.aggregate(minvalue(),$Transition,durationkey())</pre><p>3. Use the Boundaries tool to\u00a0[An invalid workstep link was removed]create a new boundary on the Product_Viscosity signal over the condition &#34;Grade Transition Capsules.&#34;</p>",
        "DocumentBackup\u02c9allison.buenemann@seeq.com\u02c92019-03-14T16:34:00Z": "<h4>Links to Previous Worksheets:</h4><ul><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/17065A04-0E4E-4A0F-AAC4-BC78F3269FEF\" rel=\"nofollow noopener noreferrer\">Pulling in Process Data</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/E730749E-353A-4D99-9CEF-3E0AFB9D6981\" rel=\"nofollow noopener noreferrer\">Calculating new Delayed Reactor Signals</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/BDE8A3B9-866D-4D5B-8740-D10350D4924A\" rel=\"nofollow noopener noreferrer\">Cleansing Model Input Signals</a></li><li><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;F9A0414F-1EC9-4098-8A18-C58A5557F56A&amp;workstep&#61;F517729A-8A7E-48B5-B7BA-C058883857EF\" rel=\"nofollow noopener noreferrer\">Model Generation and Comparison</a></li></ul><h3><strong>Creating Boundaries:</strong></h3><p>This worksheet uses Seeq tools to calculate and display product specification limits for the Product Viscosity as boundaries.</p><h4><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;F9A0414F-1EC9-4098-8A18-C58A5557F56A&amp;workstep&#61;63B67703-BF2E-405B-A8F2-E2B5393E10F9\" rel=\"nofollow noopener noreferrer\">Display Starting Point</a></h4><p><strong>Boundary Input Signals:</strong></p><ul><li>[An invalid workstep link was removed]Viscosity Quality Specification Limits<ul><li>Upper Limit</li><li>Lower Limit</li></ul></li><li>[An invalid workstep link was removed]Grade Transition Condition Boundaries</li></ul><p><strong>Creating Quality Specification Limits</strong></p><p>A tag does not exist for the upper and lower specification limit signals, so a signal had to be created.</p><ol><li>[An invalid workstep link was removed]Create a Condition for each Product Grade</li><li>Use Formula and the Splice function to create a new signal for the upper and lower specification limits for Product Viscosity across all grades. Below is an example of how Formula is used to create these signals.\u00a0</li><li><pre>$USL101 &#61; (1.1).tosignal() $USL102 &#61; (0.88).tosignal() $USL103 &#61; (1.21).tosignal() $USL104 &#61; (0.825).tosignal() $USL105 &#61; (0.99).tosignal() $USL106 &#61; (0.594).tosignal() $USL107 &#61; (1.155).tosignal() $USL108 &#61; (1.87).tosignal() \n0.tosignal() \u00a0 \u00a0 \u00a0.splice($USL101,$GR101,False) \u00a0 \u00a0 \u00a0.splice($USL102,$GR102,False) \u00a0 \u00a0 \u00a0.splice($USL103,$GR103, False) \u00a0 \u00a0 \u00a0.splice($USL104,$GR104, False) \u00a0 \u00a0 \u00a0.splice($USL105,$GR105, False) \u00a0 \u00a0 \u00a0.splice($USL106,$GR106, False) \u00a0 \u00a0 \u00a0.splice($USL107,$GR107, False) \u00a0 \u00a0 \u00a0.splice($USL108,$GR108, False)</pre><ol><li>[An invalid workstep link was removed]Upper Specification Limit\u00a0</li><li>[An invalid workstep link was removed]Lower Specification Limit</li></ol></li><li>Use the Boundaries tool to turn the USL and LSL into [An invalid workstep link was removed]boundaries on the signal &#34;Product_Viscosity&#34;.</li><li>[An invalid workstep link was removed]Create a signal for the Target Viscosity (Central between the USL and LSL). This can be done via the same splice methodology in formula, or by taking the average of the USL and LSL signals.<ol><li><pre>$LSL.add($USL).divide(2)</pre></li></ol></li></ol><p><strong>Creating Boundaries during Grade Transitions</strong></p><p>We want to expand our upper and lower boundaries on the viscosity signal horizontally to encapsulate time periods when we are transitioning between product grades</p><p>1. To [An invalid workstep link was removed]create a condition for &#34;Grade Transition&#34;\u00a0use the following formula code to:</p><ol><li>Shrink the capsules for each grade by a tiny amount, to allow for a new capsule to be formed between them</li><li>Join the shrunken capsules into one composite condition for all grades</li><li>Invert this period of all grades to identify only the time periods between grades</li><li>Grow this new &#34;between grades&#34; condition</li><li>Shift that grown condition to begin at the transition, rather than center around it.\u00a0</li></ol><pre>//Shrunken Capsules $shrunkGR101 &#61; $GR101.shrink(1min) $shrunkGR102 &#61; $GR102.shrink(1min) $shrunkGR103 &#61; $GR103.shrink(1min) $shrunkGR104 &#61; $GR104.shrink(1min) $shrunkGR105 &#61; $GR105.shrink(1min) $shrunkGR106 &#61; $GR106.shrink(1min) $shrunkGR107 &#61; $GR107.shrink(1min) $shrunkGR108 &#61; $GR108.shrink(1min) \n$shrunkGR101 \u00a0 \u00a0 \u00a0.union($shrunkGR102,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR103,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR104,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR105,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR106,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR107,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR108,5d) \u00a0 \u00a0 \u00a0.inverse(1h) \u00a0 \u00a0 \u00a0.grow(1h) \u00a0 \u00a0 \u00a0.move(1h,1h)</pre><p>2. [An invalid workstep link was removed]Calculate the maximum and minimum limits to be applied to create boundaries during the &#34;grade transition&#34; capsules. The following code takes the minimum of the LSL signal during the condition &#34;Transition&#34; and creates a new signal with that value over the duration of the condition.\u00a0</p><pre>$LSL.aggregate(minvalue(),$Transition,durationkey())</pre><p>3. Use the Boundaries tool to [An invalid workstep link was removed]create a new boundary on the Product_Viscosity signal over the condition &#34;Grade Transition Capsules.&#34;</p>",
        "Enabled": true,
        "Froala Backup": "<h4>Links to Previous Worksheets:</h4><ul><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/17065A04-0E4E-4A0F-AAC4-BC78F3269FEF\" rel=\"nofollow noopener noreferrer\">Pulling in Process Data</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/E730749E-353A-4D99-9CEF-3E0AFB9D6981\" rel=\"nofollow noopener noreferrer\">Calculating new Delayed Reactor Signals</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/BDE8A3B9-866D-4D5B-8740-D10350D4924A\" rel=\"nofollow noopener noreferrer\">Cleansing Model Input Signals</a></li><li><a href=\"https://explore.seeq.com/workbook/86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC/worksheet/271B44F1-6AFB-4E54-9700-25E1577FCDDA\" rel=\"nofollow noopener noreferrer\">Model Generation and Comparison</a></li></ul><h3><strong>Creating Boundaries:</strong></h3><p>This worksheet uses Seeq tools to calculate and display product specification limits for the Product Viscosity as boundaries.</p><h4><a href=\"/links?type&#61;workstep&amp;workbook&#61;86BEA7EF-3A51-4BA0-8CDF-B3675E05EFFC&amp;worksheet&#61;F9A0414F-1EC9-4098-8A18-C58A5557F56A&amp;workstep&#61;63B67703-BF2E-405B-A8F2-E2B5393E10F9\" rel=\"nofollow noopener noreferrer\">Display Starting Point</a></h4><p><strong>Boundary Input Signals:</strong></p><ul><li>[An invalid workstep link was removed]Viscosity Quality Specification Limits<ul><li>Upper Limit</li><li>Lower Limit</li></ul></li><li>[An invalid workstep link was removed]Grade Transition Condition Boundaries</li></ul><p><strong>Creating Quality Specification Limits</strong></p><p>A tag does not exist for the upper and lower specification limit signals, so a signal had to be created.</p><ol><li>[An invalid workstep link was removed]Create a Condition for each Product Grade</li><li>Use Formula and the Splice function to create a new signal for the upper and lower specification limits for Product Viscosity across all grades. Below is an example of how Formula is used to create these signals.\u00a0</li><li><pre>$USL101 &#61; (1.1).tosignal() $USL102 &#61; (0.88).tosignal() $USL103 &#61; (1.21).tosignal() $USL104 &#61; (0.825).tosignal() $USL105 &#61; (0.99).tosignal() $USL106 &#61; (0.594).tosignal() $USL107 &#61; (1.155).tosignal() $USL108 &#61; (1.87).tosignal() \n0.tosignal() \u00a0 \u00a0 \u00a0.splice($USL101,$GR101,False) \u00a0 \u00a0 \u00a0.splice($USL102,$GR102,False) \u00a0 \u00a0 \u00a0.splice($USL103,$GR103, False) \u00a0 \u00a0 \u00a0.splice($USL104,$GR104, False) \u00a0 \u00a0 \u00a0.splice($USL105,$GR105, False) \u00a0 \u00a0 \u00a0.splice($USL106,$GR106, False) \u00a0 \u00a0 \u00a0.splice($USL107,$GR107, False) \u00a0 \u00a0 \u00a0.splice($USL108,$GR108, False)</pre><ol><li>[An invalid workstep link was removed]Upper Specification Limit\u00a0</li><li>[An invalid workstep link was removed]Lower Specification Limit</li></ol></li><li>Use the Boundaries tool to turn the USL and LSL into [An invalid workstep link was removed]boundaries on the signal &#34;Product_Viscosity&#34;.</li><li>[An invalid workstep link was removed]Create a signal for the Target Viscosity (Central between the USL and LSL). This can be done via the same splice methodology in formula, or by taking the average of the USL and LSL signals.<ol><li><pre>$LSL.add($USL).divide(2)</pre></li></ol></li></ol><p><strong>Creating Boundaries during Grade Transitions</strong></p><p>We want to expand our upper and lower boundaries on the viscosity signal horizontally to encapsulate time periods when we are transitioning between product grades</p><p>1. To [An invalid workstep link was removed]create a condition for &#34;Grade Transition&#34;\u00a0use the following formula code to:</p><ol><li>Shrink the capsules for each grade by a tiny amount, to allow for a new capsule to be formed between them</li><li>Join the shrunken capsules into one composite condition for all grades</li><li>Invert this period of all grades to identify only the time periods between grades</li><li>Grow this new &#34;between grades&#34; condition</li><li>Shift that grown condition to begin at the transition, rather than center around it.\u00a0</li></ol><pre>//Shrunken Capsules $shrunkGR101 &#61; $GR101.shrink(1min) $shrunkGR102 &#61; $GR102.shrink(1min) $shrunkGR103 &#61; $GR103.shrink(1min) $shrunkGR104 &#61; $GR104.shrink(1min) $shrunkGR105 &#61; $GR105.shrink(1min) $shrunkGR106 &#61; $GR106.shrink(1min) $shrunkGR107 &#61; $GR107.shrink(1min) $shrunkGR108 &#61; $GR108.shrink(1min) \n$shrunkGR101 \u00a0 \u00a0 \u00a0.union($shrunkGR102,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR103,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR104,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR105,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR106,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR107,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR108,5d) \u00a0 \u00a0 \u00a0.inverse(1h) \u00a0 \u00a0 \u00a0.grow(1h) \u00a0 \u00a0 \u00a0.move(1h,1h)</pre><p>2. [An invalid workstep link was removed]Calculate the maximum and minimum limits to be applied to create boundaries during the &#34;grade transition&#34; capsules. The following code takes the minimum of the LSL signal during the condition &#34;Transition&#34; and creates a new signal with that value over the duration of the condition.\u00a0</p><pre>$LSL.aggregate(minvalue(),$Transition,durationkey())</pre><p>3. Use the Boundaries tool to [An invalid workstep link was removed]create a new boundary on the Product_Viscosity signal over the condition &#34;Grade Transition Capsules.&#34;</p>",
        "ID": "140B4E80-6F14-4F8F-90FC-7B640E9B1109",
        "Is CK Enabled": true,
        "Name": "Links to Previous Worksheets:",
        "Plain Text Document": "Links to Previous Worksheets:Pulling in Process DataCalculating new Delayed Reactor SignalsCleansing Model Input SignalsModel Generation and ComparisonCreating Boundaries:This worksheet uses Seeq tools to calculate and display product specification limits for the Product Viscosity as boundaries.Display Starting PointBoundary Input Signals:[An invalid workstep link was removed]Viscosity Quality Specification LimitsUpper LimitLower Limit[An invalid workstep link was removed]Grade Transition Condition BoundariesCreating Quality Specification LimitsA tag does not exist for the upper and lower specification limit signals, so a signal had to be created.[An invalid workstep link was removed]Create a Condition for each Product GradeUse Formula and the Splice function to create a new signal for the upper and lower specification limits for Product Viscosity across all grades. Below is an example of how Formula is used to create these signals.\u00a0$USL101 &#61; (1.1).tosignal() $USL102 &#61; (0.88).tosignal() $USL103 &#61; (1.21).tosignal() $USL104 &#61; (0.825).tosignal() $USL105 &#61; (0.99).tosignal() $USL106 &#61; (0.594).tosignal() $USL107 &#61; (1.155).tosignal() $USL108 &#61; (1.87).tosignal() \n0.tosignal() \u00a0 \u00a0 \u00a0.splice($USL101,$GR101,False) \u00a0 \u00a0 \u00a0.splice($USL102,$GR102,False) \u00a0 \u00a0 \u00a0.splice($USL103,$GR103, False) \u00a0 \u00a0 \u00a0.splice($USL104,$GR104, False) \u00a0 \u00a0 \u00a0.splice($USL105,$GR105, False) \u00a0 \u00a0 \u00a0.splice($USL106,$GR106, False) \u00a0 \u00a0 \u00a0.splice($USL107,$GR107, False) \u00a0 \u00a0 \u00a0.splice($USL108,$GR108, False)[An invalid workstep link was removed]Upper Specification Limit\u00a0[An invalid workstep link was removed]Lower Specification LimitUse the Boundaries tool to turn the USL and LSL into [An invalid workstep link was removed]boundaries on the signal &#34;Product_Viscosity&#34;.[An invalid workstep link was removed]Create a signal for the Target Viscosity (Central between the USL and LSL). This can be done via the same splice methodology in formula, or by taking the average of the USL and LSL signals.$LSL.add($USL).divide(2)Creating Boundaries during Grade TransitionsWe want to expand our upper and lower boundaries on the viscosity signal horizontally to encapsulate time periods when we are transitioning between product grades1. To [An invalid workstep link was removed]create a condition for &#34;Grade Transition&#34;\u00a0use the following formula code to:Shrink the capsules for each grade by a tiny amount, to allow for a new capsule to be formed between themJoin the shrunken capsules into one composite condition for all gradesInvert this period of all grades to identify only the time periods between gradesGrow this new &#34;between grades&#34; conditionShift that grown condition to begin at the transition, rather than center around it.\u00a0//Shrunken Capsules $shrunkGR101 &#61; $GR101.shrink(1min) $shrunkGR102 &#61; $GR102.shrink(1min) $shrunkGR103 &#61; $GR103.shrink(1min) $shrunkGR104 &#61; $GR104.shrink(1min) $shrunkGR105 &#61; $GR105.shrink(1min) $shrunkGR106 &#61; $GR106.shrink(1min) $shrunkGR107 &#61; $GR107.shrink(1min) $shrunkGR108 &#61; $GR108.shrink(1min) \n$shrunkGR101 \u00a0 \u00a0 \u00a0.union($shrunkGR102,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR103,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR104,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR105,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR106,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR107,5d) \u00a0 \u00a0 \u00a0.union($shrunkGR108,5d) \u00a0 \u00a0 \u00a0.inverse(1h) \u00a0 \u00a0 \u00a0.grow(1h) \u00a0 \u00a0 \u00a0.move(1h,1h)2. [An invalid workstep link was removed]Calculate the maximum and minimum limits to be applied to create boundaries during the &#34;grade transition&#34; capsules. The following code takes the minimum of the LSL signal during the condition &#34;Transition&#34; and creates a new signal with that value over the duration of the condition.\u00a0$LSL.aggregate(minvalue(),$Transition,durationkey())3. Use the Boundaries tool to [An invalid workstep link was removed]create a new boundary on the Product_Viscosity signal over the condition &#34;Grade Transition Capsules.&#34;",
        "Type": "Journal",
        "Unsearchable": false,
        "Updated At": "1692360319039339478"
    }
}